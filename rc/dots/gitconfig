[user]
	email = uplus.e10@gmail.com
	name  = uplus
[credential]
	username = uplus
[core]
	quotepath = false
	encodig = utf-8
	# pager = less --ignore-case --RAW-CONTROL-CHARS --LONG-PROMPT
	pager = delta
[pager]
	grep =
[color]
	ui = true
[color "diff"]
	oldMoved = black red
	newMoved = black green
[web]
	browser = xdg-open
[push]
	default = current
	autoSetupRemote = true
[interactive]
	diffFilter = delta --color-only
[diff]
	tool      = vimdiff
	# algorithm = histogram
	algorithm = minimal
	# algorithm = patience
	renames = true
	indentHeuristic = true
	compactionHeuristic = false
	colorMoved = default # detect moved blocks of code and style them differently from the usual removed/added lines
[fetch]
	parallel = 0
	prune = true
[blame]
	markIgnoredLines = true
	# 該当ファイルが存在しないとblameが見えなくなる
	# ignoreRevsFile = .git-blame-ignore-revs
[pull]
	# rebase = true
	ff = only
[merge]
	ff = false
	tool = vimdiff
[rebase]
	autostash = true
[help]
	# 普通に危ない
	autocorrect = 0
# 3rd
[delta]
	navigate = true  # use n and N to move between diff sections
	side-by-side = true # trueにすると左右分割でGitHubっぽく表示される
	line-numbers = true
	# light = false    # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
	features = "mantis-shrimp"
# URL
[url "https://github.com/"]
	insteadof = g:
[url "git@github.com:uplus/"]
	insteadof = ggu:
[url "https://github.com/uplus/"]
	insteadof = ghu:
# [url "https://bitbucket.org/"]
	# insteadof = b:
# [url "git@bitbucket.org:u10e10/"]
	# insteadof = bgu:
[http "https://gopkg.in"]
	followRedirects = true
[alias]
	a   = add
	s   = status --short --branch
	d   = diff
	dc  = diff --cached
	dcw = diff --cached --color-words
	dw  = diff --color-words
	ds  = diff --stat
	do  = !"git diff $(git remote-branch)"
	l       = !git graph -20
	lh      = !git graph origin/master..@
	la      = !git graph
	logmsg  = log --pretty=format:%H%n%s%n%n%b
	lo      = log --graph --decorate --stat --find-renames
	logline = log --graph --decorate --date=short --pretty='%C(yellow)%h %Cgreen[%cd]%Creset%C(cyan bold)%d%Creset %s'
	today   = log --graph --decorate --oneline --stat --since='16 hour ago'
	graph   = log --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
	loggr   = log --graph --date-order --pretty=format:'%Cblue%h %Cgreen%ci %Cred%an %Cblue%m %Creset%s %Cred%d'
	deletes = log --diff-filter=D --summary --oneline
	sw   = switch
	ch   = checkout
	new  = checkout -b
	newf = !"f(){ git new feature/$* ; }; f"
	co   = commit
	coa  = commit -a
	cov  = commit -v
	com  = commit -m
	cav  = commit -av
	cam  = commit -am
	coav = commit -av
	coam = commit -am
	fix  = commit --amend -v
	fixa = commit --amend -va
	fixm = commit --amend -C HEAD
	fixam = commit --amend -a -C HEAD
	wt    = worktree
	empty = commit --allow-empty -m
	b     = branch
	eda   = branch -avv
	del   = branch -d
	delff = branch -D
	ss    = stash save --include-untracked --keep-index --message
	save  = stash save --include-untracked
	spop  = stash pop
	sdrop = stash drop
	slist = stash list --stat --oneline
	ours   = checkout --ours
	theirs = checkout --theirs
	ch-original = checkout --theirs # 元の方を採用する
	ch-current = checkout --ours
	ls = ls-files --exclude-standard -c -o
	ls-untracked = ls-files --ignored --directory --exclude-standard --others 
	tags = tag -l -n --sort=v:refname
	untrack = update-index --skip-worktree
	push-force = push --force-with-lease
	remote-branch = !"f(){ git status --branch | grep '^Your' | grep -Po \"'[^']*'\" | tr -d \"'\"; }; f"
	rprune = !"f(){ git remote prune ${1:-origin}; }; f"
	rei    = !"f(){ git rebase -i ${1:-$(git parent-branch)}; }; f"
	rebase-ignore-date = rebase --ignore-date
	rebase-reset-author-date = rebase --reset-author-date
	# rei    = rebase -i
	# reoh   = !"f(){ git rebase -i $(git remote-branch); }; f"
	continue = rebase --continue
	abort    = rebase --abort
	skip     = rebase --skip
	smerge = !"f(){ git merge --ff-only ${1}; git branch -d ${1}; }; f"
	fmerge = merge --ff-only
	aliases = !git config --get-regexp '^alias\\.' | sed 's/^alias\\.//g'
	merged  = !git branch --merged | grep -v master | grep -v '*'
	edit    = config --edit --local
	editg   = config --edit --global
	back   = !"f(){ git logmsg -n ${1:-1}; git reset HEAD~${1}; }; f"
	current-branch = rev-parse --abbrev-ref HEAD
	# fetch-pulls = fetch origin +refs/pull/*:refs/remotes/pull/*
	souji = clean -fd
	get = clone --depth 1
	inish = !"f(){ git init && [ $# -ne 0 ] && git add $1; git s && git sh; }; f"
	inic = !"git init && git add --all && git s && git com 'First commit.'"
	ctodo = !"git commit -n -m \"[ci skip] [tmp] [$(date +%F:%R)]\""
	tmpc = !"git add --all && git ctodo"
	# open = !"xdg-open $(git remote show origin -n | grep -m1 -oP '(?<=URL: ).*')"
	pull-dry-run  = !"git fetch origin; B=$(git rev-parse --abbrev-ref HEAD); git diff --stat --summary ${B}..origin/${B}"
	pullre = !"f(){ git switch ${1} && git pull && git switch - && git rebase ${1} ; }; f"
	rename-to-new-alias = !"sed -i -e 's|https://github\\.com/u10e10/|ghu:|' -e 's|git@github\\.com:u10e10/|ggu:|' .git/config"
	pick = cherry-pick
	wta = !"f(){ git worktree add \".git-wt-$(echo ${1} | tr '/' '-')\" \"${1}\"; }; f"
	grepf = grep --function-context
	# log-branch = !"git log --oneline --pretty=format:%D | grep -v '^tag:' | sed \"s|^$(git remote show)/[^ ]*\\s*||g\" | grep -v '^$'"
	# parent-branch = !"git log-branch | sed 's|HEAD -> [^ ]\\+\\s*||g' | grep -v '^$' | peco --select-1"
	# awkで順序を維持したまま重複排除
	log-branch = !"git show-branch | grep '*' | grep -v \"$(git rev-parse --abbrev-ref HEAD)\" | awk -F'[]~^[]' '{print $2}' | awk 'a[$0]++ == 0'"
	parent-branch = !"git log-branch | peco --on-cancel=error --select-1"
	merge-to = merge-to
	remote-change = remote-change
	capdate = !"git add . ; git com update"
	copdate = !"git com update"
	refloga = reflog --date=human --all
	browse = !gh browse
	open = browse
	pr = !gh pr
	pr-create = !gh pr create --web
	pr-create-push = !"git push -u && git pr-create"
	pr-open = !gh pr view --web
	prc = !gh pr checkout

# delta --list-syntax-themes
[delta "mantis-shrimp"]
	dark = true
	side-by-side = true
	zero-style = syntax
	syntax-theme = Coldark-Dark
	navigate = true
	keep-plus-minus-markers = false
	hyperlinks = true
	file-style = "#f3f4ff" bold
	file-decoration-style = "#1688f0" ol ul
	file-added-label = [+]
	file-copied-label = [==]
	file-modified-label = [*]
	file-removed-label = [-]
	file-renamed-label = [->]
	commit-decoration-style ="#11ce16" box
	commit-style = "#ffd21a" bold italic
	# hunk-header-decoration-style = "#1688f0" box ul
	# hunk-header-file-style = "#c63bee" ul bold
	# hunk-header-line-number-style = "#ffd21a" box bold
	# hunk-header-style = file line-number syntax bold italic
	line-numbers = true
	line-numbers-left-format = "{nm:>1}|"
	line-numbers-left-style = "#1688f0"
	line-numbers-minus-style = "#ff0051" bold
	line-numbers-plus-style = "#03e57f" bold
	line-numbers-right-format = "{np:>1}|"
	line-numbers-right-style = "#1688f0"
	line-numbers-zero-style = "#aaaaaa" italic
	minus-emph-style = syntax bold "#b80000"
	minus-style = syntax "#5d001e"
	plus-emph-style = syntax bold "#007800"
	plus-style = syntax "#004433"
	whitespace-error-style = "#280050"

[delta "chameleon"]
	dark = true
	line-numbers = true
	side-by-side = true
	keep-plus-minus-markers = false
	syntax-theme = Nord
	file-style = "#13b4ff" bold
	file-decoration-style = "#434C5E" ul
	file-added-label = [+]
	file-copied-label = [==]
	file-modified-label = [*]
	file-removed-label = [-]
	file-renamed-label = [->]
	hunk-header-style = omit
	line-numbers-left-format = " {nm:>1} │"
	line-numbers-left-style = red
	line-numbers-right-format = " {np:>1} │"
	line-numbers-right-style = green
	line-numbers-minus-style = red italic black
	line-numbers-plus-style = green italic black
	line-numbers-zero-style = "#434C5E" italic
	minus-style = bold red
	minus-emph-style = bold red
	plus-style = bold green
	plus-emph-style = bold green
	zero-style = syntax
	blame-code-style = syntax
	blame-format = "{author:<18} ({commit:>7}) {timestamp:^16} "
	blame-palette = "#2E3440" "#3B4252" "#434C5E" "#4C566A"
