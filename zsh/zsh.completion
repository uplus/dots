#!/usr/bin/env zsh

# heroku autocomplete setup
# compinitが余計に呼ばれる
# HEROKU_AC_ZSH_SETUP_PATH=/home/uplus/.cache/heroku/autocomplete/zsh_setup && test -f $HEROKU_AC_ZSH_SETUP_PATH && source $HEROKU_AC_ZSH_SETUP_PATH;

# from bash completion
if [[ -n ${ZSH_VERSION-} ]]; then
  autoload -U +X bashcompinit && bashcompinit
  complete -o nospace -C terraform terraform
  complete -C aws_completer aws
fi

compdef _virtualbox vboxmanage
compdef _tree uree
compdef _gnu_generic objdump
compdef _gnu_generic spectacle

# added by travis gem
[ ! -s ${HOME}/.travis/travis.sh ] || source ${HOME}/.travis/travis.sh

_ch(){
  #CDPATHに値を設定すると補完候補に追加できる
  CDPATH=$HOME
  _cd "cd"
}
compdef _ch ch

_vimrc(){
  _files -W $(vimrc -d) && return 0
}
compdef _vimrc vimrc

_zshrc(){
  _files -W $(zshrc -d) && return 0
}
compdef _zshrc zshrc

_vw(){ _files -W ~works && return 0 }
compdef _vw vw

_vbox-startvm(){
  vbox-list-vms | while read line; do
    compadd "${line}"
  done
  return 0
}
compdef _vbox-startvm vbox-startvm

# ---- 手動更新 ----

# in_path ruby && in_path note && eval "$(note --complete)"
# genereated by 'note --complete'
_note(){
  _files -W `note --dir` && return 0
}
compdef _note note


# pip # {{{
# generated by 'pip completion --zsh'
function _pip_completion {
  local words cword
  read -Ac words
  read -cn cword
  reply=( $( COMP_WORDS="$words[*]" \
             COMP_CWORD=$(( cword-1 )) \
             PIP_AUTO_COMPLETE=1 $words[1] 2>/dev/null ))
}
compctl -K _pip_completion pip3
# compdef _pip_completion pip pip2 pip2.7 pip3 pip3.4
# }}}

update-completions() {
  helm completion zsh > "${ZSH_DOT_DIR}/f/_helm"
  stern --completion zsh > "${ZSH_DOT_DIR}/f/_stern"
  kubectl completion zsh > "${ZSH_DOT_DIR}/f/_kubectl"

  curl -L https://raw.githubusercontent.com/docker/cli/master/contrib/completion/zsh/_docker -o "${ZSH_DOT_DIR}/f/_docker"
  curl -L https://raw.githubusercontent.com/gradle/gradle-completion/master/_gradle -o "${ZSH_DOT_DIR}/f/_gradle"

  rm -r "${HOME}/.zcompdump" "${HOME}/.zcompcache/"
}
